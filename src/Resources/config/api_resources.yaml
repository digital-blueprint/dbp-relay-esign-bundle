resources:
  Dbp\Relay\EsignBundle\Entity\AdvancedlySignedDocument:
    security: 'is_granted("IS_AUTHENTICATED_FULLY")'
    types: ['http://schema.org/MediaObject']
    description: "Advanced signed PDF document"
    shortName: "EsignAdvancedlySignedDocument"
    routePrefix: "/esign"
    normalizationContext:
      groups: ["EsignAdvancedlySignedDocument:output"]
      jsonld_embed_context: true

    operations:

      ApiPlatform\Metadata\GetCollection:
        provider: Dbp\Relay\EsignBundle\State\DummyProvider
        uriTemplate: "/advancedly-signed-documents"
        openapiContext:
          tags: ["Electronic Signatures"]

      ApiPlatform\Metadata\Get:
        provider: Dbp\Relay\EsignBundle\State\DummyProvider
        uriTemplate: "/advancedly-signed-documents/{identifier}"
        openapiContext:
          tags: ["Electronic Signatures"]

      ApiPlatform\Metadata\Post:
        controller: Dbp\Relay\EsignBundle\Controller\CreateAdvancedlySignedDocumentAction
        uriTemplate: "/advancedly-signed-documents"
        deserialize: false
        openapiContext:
          tags: ["Electronic Signatures"]
          requestBody:
            content:
              multipart/form-data:
                schema:
                  type: "object"
                  required: ["file", "profile"]
                  properties:
                    profile:
                      description: "ID of the signature profile"
                      type: "string"
                      example: "official"
                    file:
                      type: "string"
                      format: "binary"
                    x:
                      description: "Position of the signature from the left (in points)"
                      type: "number"
                      example: "300"
                    y:
                      description: "Position of the signature from the bottom (in points)"
                      type: "number"
                      example: "400"
                    r:
                      description: "Rotation of the signature counterclockwise (in degrees)"
                      type: "number"
                      example: "0"
                    w:
                      description: "Width of the signature (in points)"
                      type: "number"
                      example: "340"
                    p:
                      description: "Page number the signature should be placed (starting with 1)"
                      type: "number"
                      example: "2"
                    user_text:
                      description: "User defined text. JSON list of objects with description/value"
                      type: "string"
                      example: '[{"description": "Some ID", "value": "123456"}]'
          responses:
            415:
              description: "Unsupported Media Type - Only PDF files can be signed!"
            502:
              description: "PDF-AS error"
            503:
              description: "PDF-AS service unavailable"

    properties:
      identifier:
        identifier: true
        iri: "http://schema.org/identifier"
      contentUrl:
        iri: "http://schema.org/contentUrl"
      name:
        iri: "http://schema.org/name"
      contentSize:
        iri: "https://schema.org/contentSize"

  Dbp\Relay\EsignBundle\Entity\QualifiedlySignedDocument:
    security: 'is_granted("IS_AUTHENTICATED_FULLY")'
    types: ['http://schema.org/MediaObject']
    description: "Qualifiedly signed PDF document"
    shortName: "EsignQualifiedlySignedDocument"
    routePrefix: "/esign"
    normalizationContext:
      groups: ["EsignQualifiedlySignedDocument:output"]
      jsonld_embed_context: true

    operations:

      ApiPlatform\Metadata\GetCollection:
        provider: Dbp\Relay\EsignBundle\State\DummyProvider
        uriTemplate: "/qualifiedly-signed-documents"
        openapiContext:
          tags: ["Electronic Signatures"]

      ApiPlatform\Metadata\Get:
        provider: Dbp\Relay\EsignBundle\State\QualifiedlySignedDocumentProvider
        uriTemplate: "/qualifiedly-signed-documents/{identifier}"
        openapiContext:
          tags: ["Electronic Signatures"]
          parameters:
            - name: identifier
              in: path
              description: 'Id of document to fetch'
              required: true
              type: "string"
              example: "28DbA8052CE1410AF5985E"
            - name: fileName
              in: query
              description: 'File name of the original file'
              required: false
              type: "string"
              example: "my-document.pdf"

          responses:
            502:
              description: "PDF-AS error"
            503:
              description: "PDF-AS service unavailable"

    properties:
      identifier:
        identifier: true
        iri: "http://schema.org/identifier"
      contentUrl:
        iri: "http://schema.org/contentUrl"
      name:
        iri: "http://schema.org/name"
      contentSize:
        iri: "https://schema.org/contentSize"

  Dbp\Relay\EsignBundle\Entity\QualifiedSigningRequest:
    security: 'is_granted("IS_AUTHENTICATED_FULLY")'
    types: ['http://schema.org/EntryPoint']
    description: "Qualified signing request"
    shortName: "EsignQualifiedSigningRequest"
    routePrefix: "/esign"
    normalizationContext:
      groups: ["EsignQualifiedSigningRequest:output"]
      jsonld_embed_context: true

    operations:

      ApiPlatform\Metadata\GetCollection:
        provider: Dbp\Relay\EsignBundle\State\DummyProvider
        uriTemplate: "/qualified-signing-requests"
        openapiContext:
          tags: ["Electronic Signatures"]

      ApiPlatform\Metadata\Get:
        provider: Dbp\Relay\EsignBundle\State\DummyProvider
        uriTemplate: "/qualified-signing-requests/{identifier}"
        openapiContext:
          tags: ["Electronic Signatures"]

      ApiPlatform\Metadata\Post:
        controller: Dbp\Relay\EsignBundle\Controller\CreateQualifiedSigningRequestAction
        uriTemplate: "/qualified-signing-requests"
        deserialize: false
        openapiContext:
          tags: ["Electronic Signatures"]
          requestBody:
            content:
              multipart/form-data:
                schema:
                  type: "object"
                  required: ["file", "profile"]
                  properties:
                    profile:
                      description: "ID of the signature profile"
                      type: "string"
                      example: "official"
                    file:
                      type: "string"
                      format: "binary"
                    x:
                      description: "Position of the signature from the left (in points)"
                      type: "number"
                      example: "300"
                    y:
                      description: "Position of the signature from the bottom (in points)"
                      type: "number"
                      example: "400"
                    r:
                      description: "Rotation of the signature counterclockwise (in degrees)"
                      type: "number"
                      example: "0"
                    w:
                      description: "Width of the signature (in points)"
                      type: "number"
                      example: "340"
                    p:
                      description: "Page number the signature should be placed (starting with 1)"
                      type: "number"
                      example: "2"
                    user_text:
                      description: "User defined text. JSON list of objects with description/value"
                      type: "string"
                      example: '[{"description": "Some ID", "value": "123456"}]'
          responses:
            413:
              description: "Payload Too Large - PDF file too large to sign!"
            415:
              description: "Unsupported Media Type - Only PDF files can be signed!"
            502:
              description: "PDF-AS error"
            503:
              description: "PDF-AS service unavailable"

    properties:
      identifier:
        identifier: true
        iri: "http://schema.org/identifier"
      name:
        iri: "http://schema.org/name"
      url:
        iri: "https://schema.org/url"

  Dbp\Relay\EsignBundle\Entity\ElectronicSignature:
    security: 'is_granted("IS_AUTHENTICATED_FULLY") and is_granted("ROLE_SCOPE_VERIFY-SIGNATURE")'
    types: ['http://schema.tugraz.at/ElectronicSignature']
    description: "An electronic signature of a signed document"
    shortName: "EsignElectronicSignature"
    routePrefix: "/esign"
    normalizationContext:
      groups: ["EsignElectronicSignature:output"]
      jsonld_embed_context: true

    operations:

      ApiPlatform\Metadata\GetCollection:
        provider: Dbp\Relay\EsignBundle\State\DummyProvider
        uriTemplate: "/electronic-signatures"
        openapiContext:
          tags: ["Electronic Signatures"]

      ApiPlatform\Metadata\Get:
        provider: Dbp\Relay\EsignBundle\State\DummyProvider
        uriTemplate: "/electronic-signatures/{identifier}"
        openapiContext:
          tags: ["Electronic Signatures"]

    properties:
      identifier:
        identifier: true
        iri: "http://schema.org/identifier"
      givenName:
        iri: "http://schema.org/givenName"
      familyName:
        iri: "https://schema.org/familyName"
      serialNumber:
        iri: "https://schema.org/serialNumber"
      signedBy:
        iri: "https://schema.org/Text"
      nationality:
        iri: "https://schema.org/nationality"
      valueMessage:
        iri: "https://schema.org/Text"

  Dbp\Relay\EsignBundle\Entity\ElectronicSignatureVerificationReport:
    security: 'is_granted("IS_AUTHENTICATED_FULLY") and is_granted("ROLE_SCOPE_VERIFY-SIGNATURE")'
    types: ['https://schema.tugraz.at/ElectronicSignatureVerificationReport']
    shortName: "EsignElectronicSignatureVerificationReport"
    routePrefix: "/esign"
    normalizationContext:
      groups: ["EsignElectronicSignatureVerificationReport:output", "ElectronicSignature:output"]
      jsonld_embed_context: true

    operations:

      ApiPlatform\Metadata\GetCollection:
        provider: Dbp\Relay\EsignBundle\State\DummyProvider
        uriTemplate: "/electronic-signature-verification-reports"
        openapiContext:
          tags: ["Electronic Signatures"]

      ApiPlatform\Metadata\Get:
        provider: Dbp\Relay\EsignBundle\State\DummyProvider
        uriTemplate: "/electronic-signature-verification-reports/{identifier}"
        openapiContext:
          tags: ["Electronic Signatures"]

      ApiPlatform\Metadata\Post:
        controller: Dbp\Relay\EsignBundle\Controller\CreateAdvancedlySignedDocumentAction
        uriTemplate: "/electronic-signature-verification-reports"
        deserialize: false
        openapiContext:
          summary: "Retrieves a ElectronicSignatureVerificationReport resource with a collection of ElectronicSignature resources of a signed document."
          tags: ["Electronic Signatures"]
          requestBody:
            content:
              multipart/form-data:
                schema:
                  type: "object"
                  required: ["file"]
                  properties:
                    file:
                      type: "string"
                      format: "binary"
          responses:
            415:
              description: "Unsupported Media Type - Only PDF files can be verified!"
            502:
              description: "PDF-AS error"
            503:
              description: "PDF-AS service unavailable"

    properties:
      identifier:
        identifier: true
        iri: "http://schema.org/identifier"
      name:
        iri: "http://schema.org/name"
